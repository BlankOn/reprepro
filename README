* First if all, this is version 0.0. Thus many things I consider important are still
not implemented. While I'm in 0.0 I may also change semantics, names and commandline
syntax and even structure of the database without any upgrade path. 

See the file TODO for things I plan to do.

* What it is:

	This project aims to be a weightleight manager of a debian package
	(i.e. binary .deb and source .dsc+.tar.gz+.diff.gz) repository.
	Emphasis is put on having all packages in the pool/-directory,
	generation of signed Release file and maximal checking of all
	sources.
	Libraries needed are libdb3 and libz and libgpgme.
	
* Current status:
	
	Package managment and database mostly works. Missing/To be Finished
	is the direct inclusion of Packages and updating the packages from
	some upstream repository(e.g. debian mirrors).
	Both already works with some Makefile-magic, is meant to be supported
	natively.

	Downloading files happens through calling files within 
	/usr/lib/apt/methods (or -M). One can give them Configuration
	by means of a "Config: " multiline.
	(every line beeing in the format as apt-get --option)
	
* Some naming conventions:
	basename: the name of a file without any directory information.
	filekey: the position relative to the mirrordir.
	(as found as "Filename:" in Packages.gz)
	full filename: the position relative to /

	architecture: The term like "sparc","i386","mips",...
	component: Things like "main" "non-free" "contrib" ...

	md5sum: The checksum of a file, beeing in the format
		"<md5sum of file> <length of file>"


* Differences to how other standard tools handle the situation:

 - mirroring:
 	This makes no real mirror of the distribution, but
	only of it contents. Thus the Index-files will
	be different. (And thus no longer can be verified
	by the offical signatures). This means people using
	this mirror have to trust you to not include anything
	ugly, as they can only check your signature directly.
	(Or in other words: not useful for mirroring things
	 to be used by strangers).
 - location:
 	The directory layout under pool/ is only divided
	by the component and the sourcename. Ecspecially
	woody and updates/woody will share the same space,
	thus avoiding multiple instances of the same file.
	(Can also cause trouble in the rare cases, when both 
	 have a file of the same name with different md5sum. 
	 Using -f can help here).
 - 'byhand'-section
 	This is currently just implemented as alias for '-',
	to make sure lack of implementation does not cause them
	to land in a byhand-section...
	
* Things that might be intresting to know:

 - guessing the component:
 	If inserting a binary or source package without naming
	an component, this program has to guess of course.
	This will done the following way: It will take the
	first component with the name of the section, beeing
	prefix to the section, beeing suffix to the section
	or having the section as prefix or any.
	Thus having specifiend the components:
	"main non-free contrib non-US/main non-US/non-free non-US/contrib"
	should map .e.g 
	"non-US" to "non-US/main" and "contrib/editors" to "contrib",
	while having only "main non-free and contrib" as components should
	map e.g. "non-US/contrib" to "contrib" and "non-US" to "main".

	NOTE: Always specify main as the first component, if you want things 
	      to end up there.
	NOTE: unlike in dak, non-US and non-us are different things...

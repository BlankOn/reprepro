.TH REPREPRO 1 "22 July, 2004" "reprepro" REPREPRO
.SH NAME
reprepro \- produce, manage and sync a local repository of debian packages
.SH SYNOPSIS
.B reprepro \-\-help

.B reprepro
[
\fIoptions\fP
]
\fIcommand\fP
[ 
\fIper\-command\-options\fP 
]
.SH DESCRIPTION
Reprepro ...
pool database
libdb3 gpgme 
.SH "GLOBAL OPTIONS"
Global options can be specified before the command. They effect
some subset of commands and are ignored otherwise.
.TP
.B \-h \-\-help
Displays a short list of options and commands with description.
.TP
.B \-v, \-V, \-\-verbose
Be more verbose. Can be applied multiple times. One upcase 
.B \-V 
counts as five lowercase 
.B \-v.
.TP
.B \-f, \-\-force
Do things nevertheless. Might be dangerous and destructive.
.TP
.B \-b, \-\-basedir \fIbasedir\fP
Sets the base\-dir of the repository to manage, i.e. where the
.B pool/
subdirectory resides. Also sets
.B \-\-distdir \fIbasedir\fP/dists \-\-dbdir \fIbasedir\fP/db 
.B \-\-listdir \fIbasedir\fP/lists \-\-confdir \fIbasedir\fP/conf 
.B \-\-overridedir \fIbasedir\fP/override
(that means especially: use those options afterwards if you want to use them).
.TP
.B \-\-confdir \fIconfdir\fP
Sets the directory where the configuration is searched in.
.TP
.B \-\-distdir \fIdistdir\fP
Sets the directory to generate index files relatively to. (i.e. things like
Packages.gz Sources.gz and Release.gpg)

.B Note: 
apt has 
.B dists
hardcoded in it, so this is only useful for testing or when your webserver
pretends another directory structure than your physical layout.
.TP
.B \-\-dbdir \fIdbdir\fP
Sets the directory where reprepro keeps its databases.

.B Note:
This is permanent data, no cache. One has almost to regenerate the whole
repository when this is lost.
.TP
.B \-\-listdir \fIlistdir\fP
Sets the directory where downloads it downloads indices to when importing
from other repositories. This is temporary data and can be safely deleted
when not in an update run.
.TP
.B \-\-overridedir \fIoverridedir\fP
Sets the directory where specified override\-files will be searched in if
they do not start with a slash.
.TP
.B \-\-methoddir \fImethoddir\fP
Look in \fImethoddir\fP instead of
.B /usr/lib/apt/methods
for methods to call when importing from other repositories.
.TP
.B \-C, \-\-component \fIcomponent\fP
Specify a component to force into, to remove from or to list only.
.TP
.B \-A, \-\-architecture \fIarchitecture\fP
Specify an architecture to only include into, remove from or
list.

When including this does not lead to packages in the wrong architecture
but will restrict effect to this architecture. This allows e.g. different
versions of an
.B Architecture: all
\-package in different architectures of the same distribution.
.TP
.B \-T, \-\-type \fRdsc|deb|udeb
Specify which type of files to include, remove or list.
.TP
.B \-S, \-\-section \fIsection\fP
Overrides the section of inclusions. (Also override possible override files)
.TP
.B \-P, \-\-priority \fIpriority\fP
Overrides the priority of inclusions. (Also override possible override files)
.SH COMMANDS
.TP
.BR export " [ " \fIcodenames\fP " ]"
Generate all index files for the specified distributions. (For all if none
is specified). This will normaly be done automatically and more
fine\-tuned when including or removing packages, so seldom needed; but is nevertheless 
a good way to see if
a new 
.B distributions
config\-file does the expected things.
.TP
.B list \fIcodename\fP \fIpackagename\fP
List all packages (source and binary, except when
.B \-T 
or
.B \-A
is given) with the given name in all components (except when
.B \-C
is given) and architectures (except when
.B \-A
is given) of the specified distribution.
.TP
.B listfilter \fIcodename\fP \fIcondition\fP
as list, but does not list a single packge, but all packages
matching the given condition.

.B reprepro \-b . \-T deb listfilter test2 'Source (==blub) | ( !Source , Package (==blub) )'
will e.g. find all .deb Packages with Source blub. (Except those also specifying a version
number with its Source, as binary and source version differ).
.TP
.B remove \fIcodename\fP \fIpackagename\fP
same as list, but remove instead of list.
.TP
.BR update " [ " \fIcodenames\fP " ]"
Sync the specified distributions (all if none given) as
specified in the config with their upstreams. See the
description of
.B conf/updates
below.
.TP
.BR checkupdate " [ " \fIcodenames\fP " ]"
Same like
.B update,
but will show what it will change instead of actually changing it.
.TP
.B includedeb \fIcodename\fP \fI.deb-filename\fP
Include the given binary Debian package (.deb) in the specified
distribution, applying override information and guessing all 
values not given and guessable.
.TP
.B includedsc \fIcodename\fP \fI.dsc-filename\fP
Include the given Debian source package (.dsc, including other files
like .orig.tar.gz, .tar.gz and/or .diff.gz) in the specified
distribution, applying override information and guessing all values 
not given and guessable.

Note that as .dsc files do not contain section or priorty, but the
Sources.gz file does, you have to either specify a SrcOverride or
given them via
.B -S
and
.B -P
.TP
.B include  \fIcodename\fP \fI.changes-filename\fP
Include in the specified distribution all packages found and suitable
in the \fI.changes\fP file, applying override information guessing all 
values not given and guessable.
.TP
.BR check " [ " \fIcodenames\fP " ]"
Check if all packages in the specified distributions have all files
needed properly registered.
.TP
.BR checkpool " [ " fast " ]"
Check if all files believed to be in the pool are actually still there and
have the known md5sum. When 
.B fast
is specified md5sum is not checked.
.TP
.B rereference
Forget which files are needed and recollect this information.
.TP
.B dumpreferences
Print out which files are marked to be needed by whom.
.TP
.B dumpunreferenced
Print a list of all filed believed to be in the pool, that are
not known to be needed.
.TP
.B deleteunreferenced
Remove all known files (and forget them) in the pool not marked to be
needed by anything.
.SS internal commands
These are hopefully never needed, but allow manual intervention.
.B WARNING:
Is is quite easy to get into an inconsistent and/or unfixable state.
.TP
.BR _detect " [ " \fIfilekeys\fP " ]"
Look for the files, which \fIfilekey\fP
is given as argument or as a line of the input 
(when run without arguments), and calculate
their md5sum and add them to the list of known files.
(Warning: this is a low level operation, no input validation
 or normalisation is done.)
.TP
.BR _forget " [ " \fIfilekeys\fP " ]"
Like
.B _detect
but remove the given \fIfilekey\fP from the list of known
files.
(Warning: this is a low level operation, no input validation
 or normalisation is done.)
.TP
.B _md5sums
Print a list of all known files and their md5sums.
.TP
.B _addmd5sums
Add information of known files (without any check done)
in the strict format of _md5sums output (i.e. don't dare to
use a single space anywhere more than needed). 
.TP
.BI _dumpcontents " identifier"
Printout all the stored information of the specified
part of the repository. (Or in other words, the content
the corresposing Packages or Sources file would get)
.TP
.BI "_addreference " filekey " " identifier
Manually mark \fIfilekey\fP to be needed by \fIidentifier\fP
.TP
.BI "_removereferences " identifier
Remove all references what is needed by
.I identifier.
.TP
.BI __extractcontrol .deb-filename
Look what reprepro believes to be the content of the
.B control
file of the specified .deb-file.
.SH "CONFIG FILES"
.B reprepo 
uses two config files, that are searched in
the directory specified with 
.B \-\-confdir
or in the
.B conf/
subdirectory of the directory given by
.B \-b
 . The file
.B distributions
is always needed and describes what distributions
to manage, while
.B updates
is only needed when syncing with external repositories.

Both are in the format control files in Debian are in,
i.e. paragraphs seperated by blank lines consisting of
fields. Each field consists of an fieldname, followed
by a colon, possible whitespace and the data. A field
ends with a newline not followed by a space or tab.
.SS conf/distributions
.TP
.B Codename
This required field is the unique identifier of a distribution
and used as directory name within 
.B dists/
It is also copied into the Release files.
.TP
.B Suite
This optional field is simply copied into the
Release files. In Debian it contains names like
stable, testing or unstable. It is not used otherwise
currently, there are no symlinks created. (though that
might change in the future)
.TP
.B Version
This optional field is simply copied into the
Release files.
.TP
.B Origin
This optional field is simply copied into the
Release files.
.TP
.B Label
This optional field is simply copied into the
Release files.
.TP
.B Description
This optional field is simply copied into the
Release files.
.TP
.B Architectures
This required field lists the binary architectures within
this distribution and if it contains
.B source
(i.e. if there is an item
.B source
in this line this Distribution has source. All other items
specify things to be put after "binary\-" to form directory names
and be checked against "Architecture:" fields.)

This will also be copied into the Release files. (With exception
of the
.B source
item, which will not occour in the topmost Release file wheather
it is present here or not)
.TP
.B Components
This required field lists the component of a
distribution. See 
.B GUESSING
for rules which component packages are included into
by default. This will also be copied into the Release files.
.TP
.B UDebComponents
Components with a debian\-installer subhirachy containing .udebs.
(E.g. simply "main")
.TP
.B Update
When this field is present, it describes which update rules are used
for this distribution. There also can be a magic rule minus ("\-"),
see below.
.TP
.B SignWith
When this field is present, a Relese.gpg file will be generated.
The content will be used by future version to choose the key used
to sign.
.TP
.B Override
When this field is present, it describes the binary override file.
.TP
.B SourceOverride
When this field is present, it describes the source override file.
.SS conf/updates
.TP
.B Name
The name of this update\-upstream as it can be used in the 
.B Update
field in conf/distributions.
.TP
.B Method
An URL as one could also give it apt, e.g.
.I http://ftp.debian.de/debian
which is simply given to the corresponding
.B apt\-get
method. (So either
.B apt\-get has to be installed, or you have to point with
.B \-\-methoddir
to a place where such methods are found.
.TP
.B Config
This can contain any number of lines, each in the format
.B apt\-get \-\-option
would expect. (Multiple lines - as always - marked with
leading spaces).
.TP
.B Suite
The suite to update from. If this is not present, the codename
of the distribution using this one is used. Also "*/whatever"
is replaced by "<codename>/whatever"
.TP
.B Components
The components to update. Each item can be either the name
of a component or a pair of a upstream component and a local
component seperated with ">". (e.g. "main>all contrib>all non\-free>notall")
Items with a local part are ignored. If no items are there
all from the updated distribution are taken. (Use some nonexisting
like "none", if you want none).
.TP
.B Architectures
The architectures to update. If omitted all from the distribution
to update from. (As with components, you can use ">" to download
from one Architecture and add into an other one. (This only determine
in which Package list they land, it neighter overwrites the Architecture
line in its description, nor the one in the filename determined from this
one. In other words, it is no really usefull without additional things)
.TP
.B UDebComponents
Like
.B Components
but for the udebs.
.TP
.B VerifyRelease
Download the
.B Release.gpg
file and check if it is a signature of the
.B Releasefile 
with the key given here. (In the Format as
"gpg \-\-with-colons \-\-list-key" prints it, i.e. the last
16 hexdigits of the fingerprint)
.TP
.B IgnoreRelease
If this is present, no
.B Release
file will be downloaded and thus the md5sums of the other
index files will not be checked.
.TP
.B FilterFormula
This can be a formula to specify which packages to accept from
this source. The format is misusing the parser intended for
Dependency lines. To get only architecture all packages use
"architecture (== all)", to get only at least important
packages use "priority (==required) | priority (==important)".
.SH "OVERRIDE FILES"
yet to be described
.SH GUESSING
When including a binary or source package without explicitly
declaring a component with
.B \-C
it will take the
first component with the name of the section, beeing
prefix to the section, beeing suffix to the section
or having the section as prefix or any. (In this order)

Thus having specifiend the components:
"main non\-free contrib non\-US/main non\-US/non-free non\-US/contrib"
should map e.g.
"non\-US" to "non\-US/main" and "contrib/editors" to "contrib",
while having only "main non\-free and contrib" as components should
map "non\-US/contrib" to "contrib" and "non\-US" to "main".

.B NOTE: 
Always specify main as the first component, if you want things 
to end up there.

.B NOTE: 
unlike in dak, non\-US and non\-us are different things...
.SH NOMENCLATURE
.B Codename 
is the identifier ...
.TP
.B basename
the name of a file without any directory information.
.TP
.B filekey
the position relative to the mirrordir.  (as found as "Filename:" in Packages.gz)
.TP
.B "full filename"
the position relative to /
.TP
.B architecture
The term like
.B sparc
,
.B i386
,
.B mips
,...

To refer to the source packages, 
.B source
is sometimes also considered as architecture.
.TP
.B component
Things like 
.B main 
.
.B non\-free 
and
.B contrib
  (somtimes also called sections)
.TP
.B section
Things like 
.B base
.B interpreters
.B oldlibs
  (sometimes also called subsections)
.TP
.B md5sum
The checksum of a file, beeing in the format
"\fI<md5sum of file>\fP \fI<length of file>\fP"
.SH Some note on updates
.SS A version is not overwritten with the same version.
.B reprepro
will never update a package with a version it already has. This would
be equivalent to rebuilding the whole database with every single upgrade.
To force the new same version in, remove it and then update. (If you
do no 
.B deleteunreferenced 
inbetween, it will not need to reget the
Packages files themselves. If those change, better to a 
.B deleteunreferenced
in between or a 
.B __forget 
on the specific files.
.SS The magic delete rule ("\-").
A minus as a single word in the
.B Updates:
line of an distribution marks everything to be deleted. The mark causes later rules
to get packages even if they have (strict) lower versions. The mark will
get removed if a later rule sets the package on hold (hold is not yet implemented,
in case you might wonder) or would get a package with the same version 
(Which it will not, see above). If the mark is still there at the end of the processing,
the package will get removed.
.P
Thus the line "Updates: \- 
.I rules
" will cause all packages to be exactly the
highest Version found in 
.I rules.
The line "Updates: 
.I near 
\- 
.I rules
" will do the same, except if it needs to download packages, it might download
it from
.I near
except when too confused. (It will get too confused e.g. when 
.I near
or 
.I rules
have multiple versions of the package and the highest in
.I near
is not the first one in
.I rules,
as it never remember more than one possible spring for a package.
.P
Warning: This rule applies to all type/component/architecture tripples
of a distribution, not only those some other update rule applies to.
(That means it will delete everthing in those!)
.SH BUGS
The
.B \-\-force
option needs to be replaced by something superior so that one can allow
stupid things but not descructive things.

Increased verbosity always shows those things one does not want to know.
(Though this might be inevitable and a corrolary to Murphy)

While the source part is mostly considered as the architecture
.B source
some parts may still not use this notation.
.SH "REPORTING BUGS"
Report bugs to <brlink@debian.org>.
.SH COPYRIGHT
Copyright \(co 2004 Bernhard R. Link
.br 
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
